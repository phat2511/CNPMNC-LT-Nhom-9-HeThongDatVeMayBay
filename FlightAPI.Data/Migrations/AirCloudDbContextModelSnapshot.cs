// <auto-generated />
using System;
using FlightAPI.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightAPI.Data.Migrations
{
    [DbContext(typeof(AirCloudDbContext))]
    partial class AirCloudDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlightAPI.Data.Entities.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("IsEmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsLocked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LockReason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("LockedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LockedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("LoyaltyPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("MembershipTierId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AccountId")
                        .HasName("PK__Account__349DA5A6C830A2B1");

                    b.HasIndex("MembershipTierId");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Username" }, "UQ__Account__536C85E430E6D1B2")
                        .IsUnique();

                    b.HasIndex(new[] { "Phone" }, "UQ__Account__5C7E359E3D9F4634")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "UQ__Account__A9D10534FB30B529")
                        .IsUnique();

                    b.ToTable("Account", "auth");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Airline", b =>
                {
                    b.Property<string>("AirlineCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Website")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AirlineCode")
                        .HasName("PK__Airline__79E77E120054A031");

                    b.ToTable("Airline", "core");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Airport", b =>
                {
                    b.Property<string>("AirportCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AirportCode")
                        .HasName("PK__Airport__4B677352EDD78E13");

                    b.ToTable("Airport", "core");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.AuditLog", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AuditId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Entity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AuditId")
                        .HasName("PK__AuditLog__A17F23981B3E6A1F");

                    b.HasIndex("AccountId");

                    b.ToTable("AuditLog", "admin");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Banner", b =>
                {
                    b.Property<int>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BannerId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LinkUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("BannerId")
                        .HasName("PK__Banner__32E86AD17C3683F2");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("PromotionId");

                    b.ToTable("Banner", "core");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("BookingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("BookingStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<decimal?>("DiscountAmountApplied")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("BookingId")
                        .HasName("PK__Booking__73951AED0577A144");

                    b.HasIndex("AccountId");

                    b.HasIndex("PromotionId");

                    b.HasIndex(new[] { "BookingCode" }, "UQ__Booking__C6E56BD5EE7BB564")
                        .IsUnique();

                    b.ToTable("Booking", "sales");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.BookingFlight", b =>
                {
                    b.Property<int>("BookingFlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingFlightId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Fare")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("FlightInstanceId")
                        .HasColumnType("int");

                    b.Property<string>("PassengerName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PassengerType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("SeatId")
                        .HasColumnType("int");

                    b.HasKey("BookingFlightId")
                        .HasName("PK__BookingF__E29A261456EF46D0");

                    b.HasIndex("BookingId");

                    b.HasIndex("FlightInstanceId");

                    b.HasIndex("SeatId");

                    b.ToTable("BookingFlight", "sales");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.BookingService", b =>
                {
                    b.Property<int>("BookingServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingServiceId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int?>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("BookingServiceId")
                        .HasName("PK__BookingS__43F55CB1FE23BA42");

                    b.HasIndex("ServiceId");

                    b.HasIndex(new[] { "BookingId", "ServiceId" }, "UQ_Booking_Service")
                        .IsUnique();

                    b.ToTable("BookingService", "sales");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.EmailVerification", b =>
                {
                    b.Property<int>("VerificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VerificationId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("VerificationId")
                        .HasName("PK__EmailVer__306D49076E06154D");

                    b.HasIndex("AccountId");

                    b.ToTable("EmailVerification", "auth");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Flight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightId"));

                    b.Property<string>("AirlineCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("FlightId")
                        .HasName("PK__Flight__8A9E14EE3874E902");

                    b.HasIndex("AirlineCode");

                    b.HasIndex(new[] { "FlightNumber" }, "UQ__Flight__2EAE6F502D1C4F7F")
                        .IsUnique();

                    b.ToTable("Flight", "core");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.FlightInstance", b =>
                {
                    b.Property<int>("FlightInstanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightInstanceId"));

                    b.Property<string>("ArrivalAirport")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("DepartureAirport")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Scheduled");

                    b.HasKey("FlightInstanceId")
                        .HasName("PK__FlightIn__FD0BBB3109636797");

                    b.HasIndex("ArrivalAirport");

                    b.HasIndex("DepartureAirport");

                    b.HasIndex("FlightId");

                    b.ToTable("FlightInstance", "core");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.LoyaltyTransaction", b =>
                {
                    b.Property<int>("LoyaltyTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoyaltyTransactionId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int>("PointsChange")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("LoyaltyTransactionId")
                        .HasName("PK__LoyaltyT__5CFDF9F455CF2087");

                    b.HasIndex("AccountId");

                    b.ToTable("LoyaltyTransaction", "sales");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.MembershipTier", b =>
                {
                    b.Property<int>("MembershipTierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MembershipTierId"));

                    b.Property<string>("Benefits")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("DiscountPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5, 2)")
                        .HasDefaultValue(0m);

                    b.Property<int?>("MinPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MembershipTierId")
                        .HasName("PK__Membersh__B741E0306B3AEB63");

                    b.ToTable("MembershipTier", "admin");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Message")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Title")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E12A6425561");

                    b.HasIndex("AccountId");

                    b.ToTable("Notification", "admin");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Otp", b =>
                {
                    b.Property<int>("OtpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OtpId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OtpId")
                        .HasName("PK__OTP__3143C4A37D8C7E06");

                    b.HasIndex("AccountId");

                    b.ToTable("OTP", "auth");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaidAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payment__9B556A38FC62BE38");

                    b.HasIndex("BookingId");

                    b.ToTable("Payment", "sales");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionId"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("PromotionId")
                        .HasName("PK__Promotio__52C42FCF3D03AE70");

                    b.HasIndex(new[] { "Code" }, "UQ__Promotio__A25C5AA76B7F25D0")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Promotion", "core");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__8AFACE1A3DF201D6");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Role__8A2B6160CED64AE4")
                        .IsUnique();

                    b.ToTable("Role", "auth");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"));

                    b.Property<int>("FlightInstanceId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("SeatClassId")
                        .HasColumnType("int");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SeatId")
                        .HasName("PK__Seat__311713F3E89F104E");

                    b.HasIndex("SeatClassId");

                    b.HasIndex(new[] { "FlightInstanceId", "SeatNumber" }, "UQ_Seat_Flight")
                        .IsUnique();

                    b.ToTable("Seat", "core");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.SeatClass", b =>
                {
                    b.Property<int>("SeatClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatClassId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PriceMultiplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5, 2)")
                        .HasDefaultValue(1.0m);

                    b.HasKey("SeatClassId")
                        .HasName("PK__SeatClas__41D153A8550691B8");

                    b.ToTable("SeatClass", "core");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ServiceId")
                        .HasName("PK__Service__C51BB00AD02BFCC9");

                    b.ToTable("Service", "sales");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.SupportTicket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Open");

                    b.Property<string>("Subject")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("TicketId")
                        .HasName("PK__SupportT__712CC60737684DEA");

                    b.HasIndex("AccountId");

                    b.ToTable("SupportTicket", "admin");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.TicketMessage", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsStaffReply")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("SenderRole")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("SentAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("MessageId")
                        .HasName("PK__TicketMe__C87C0C9CC3731D28");

                    b.HasIndex("AccountId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketMessage", "admin");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Account", b =>
                {
                    b.HasOne("FlightAPI.Data.Entities.MembershipTier", "MembershipTier")
                        .WithMany("Accounts")
                        .HasForeignKey("MembershipTierId")
                        .HasConstraintName("FK_Account_MembershipTier");

                    b.HasOne("FlightAPI.Data.Entities.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Account__RoleId__4F7CD00D");

                    b.Navigation("MembershipTier");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.AuditLog", b =>
                {
                    b.HasOne("FlightAPI.Data.Entities.Account", "Account")
                        .WithMany("AuditLogs")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__AuditLog__Accoun__3493CFA7");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Banner", b =>
                {
                    b.HasOne("FlightAPI.Data.Entities.Account", "CreatedByNavigation")
                        .WithMany("Banners")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Banner_Account");

                    b.HasOne("FlightAPI.Data.Entities.Promotion", "Promotion")
                        .WithMany("Banners")
                        .HasForeignKey("PromotionId")
                        .HasConstraintName("FK_Banner_Promotion");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Booking", b =>
                {
                    b.HasOne("FlightAPI.Data.Entities.Account", "Account")
                        .WithMany("Bookings")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__Booking__Account__1332DBDC");

                    b.HasOne("FlightAPI.Data.Entities.Promotion", "Promotion")
                        .WithMany("Bookings")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Booking_Promotion");

                    b.Navigation("Account");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.BookingFlight", b =>
                {
                    b.HasOne("FlightAPI.Data.Entities.Booking", "Booking")
                        .WithMany("BookingFlights")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__BookingFl__Booki__17F790F9");

                    b.HasOne("FlightAPI.Data.Entities.FlightInstance", "FlightInstance")
                        .WithMany("BookingFlights")
                        .HasForeignKey("FlightInstanceId")
                        .IsRequired()
                        .HasConstraintName("FK__BookingFl__Fligh__18EBB532");

                    b.HasOne("FlightAPI.Data.Entities.Seat", "Seat")
                        .WithMany("BookingFlights")
                        .HasForeignKey("SeatId")
                        .HasConstraintName("FK__BookingFl__SeatI__19DFD96B");

                    b.Navigation("Booking");

                    b.Navigation("FlightInstance");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.BookingService", b =>
                {
                    b.HasOne("FlightAPI.Data.Entities.Booking", "Booking")
                        .WithMany("BookingServices")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BookingService_Booking");

                    b.HasOne("FlightAPI.Data.Entities.Service", "Service")
                        .WithMany("BookingServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BookingService_Service");

                    b.Navigation("Booking");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.EmailVerification", b =>
                {
                    b.HasOne("FlightAPI.Data.Entities.Account", "Account")
                        .WithMany("EmailVerifications")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__EmailVeri__Accou__571DF1D5");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Flight", b =>
                {
                    b.HasOne("FlightAPI.Data.Entities.Airline", "AirlineCodeNavigation")
                        .WithMany("Flights")
                        .HasForeignKey("AirlineCode")
                        .IsRequired()
                        .HasConstraintName("FK__Flight__AirlineC__72C60C4A");

                    b.Navigation("AirlineCodeNavigation");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.FlightInstance", b =>
                {
                    b.HasOne("FlightAPI.Data.Entities.Airport", "ArrivalAirportNavigation")
                        .WithMany("FlightInstanceArrivalAirportNavigations")
                        .HasForeignKey("ArrivalAirport")
                        .IsRequired()
                        .HasConstraintName("FK__FlightIns__Arriv__797309D9");

                    b.HasOne("FlightAPI.Data.Entities.Airport", "DepartureAirportNavigation")
                        .WithMany("FlightInstanceDepartureAirportNavigations")
                        .HasForeignKey("DepartureAirport")
                        .IsRequired()
                        .HasConstraintName("FK__FlightIns__Depar__787EE5A0");

                    b.HasOne("FlightAPI.Data.Entities.Flight", "Flight")
                        .WithMany("FlightInstances")
                        .HasForeignKey("FlightId")
                        .IsRequired()
                        .HasConstraintName("FK__FlightIns__Fligh__778AC167");

                    b.Navigation("ArrivalAirportNavigation");

                    b.Navigation("DepartureAirportNavigation");

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.LoyaltyTransaction", b =>
                {
                    b.HasOne("FlightAPI.Data.Entities.Account", "Account")
                        .WithMany("LoyaltyTransactions")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__LoyaltyTr__Accou__2645B050");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Notification", b =>
                {
                    b.HasOne("FlightAPI.Data.Entities.Account", "Account")
                        .WithMany("Notifications")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__Notificat__Accou__30C33EC3");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Otp", b =>
                {
                    b.HasOne("FlightAPI.Data.Entities.Account", "Account")
                        .WithMany("Otps")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__OTP__AccountId__5BE2A6F2");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Payment", b =>
                {
                    b.HasOne("FlightAPI.Data.Entities.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__Booking__22751F6C");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Seat", b =>
                {
                    b.HasOne("FlightAPI.Data.Entities.FlightInstance", "FlightInstance")
                        .WithMany("Seats")
                        .HasForeignKey("FlightInstanceId")
                        .IsRequired()
                        .HasConstraintName("FK__Seat__FlightInst__05D8E0BE");

                    b.HasOne("FlightAPI.Data.Entities.SeatClass", "SeatClass")
                        .WithMany("Seats")
                        .HasForeignKey("SeatClassId")
                        .IsRequired()
                        .HasConstraintName("FK__Seat__SeatClassI__06CD04F7");

                    b.Navigation("FlightInstance");

                    b.Navigation("SeatClass");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.SupportTicket", b =>
                {
                    b.HasOne("FlightAPI.Data.Entities.Account", "Account")
                        .WithMany("SupportTickets")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__SupportTi__Accou__2BFE89A6");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.TicketMessage", b =>
                {
                    b.HasOne("FlightAPI.Data.Entities.Account", "Account")
                        .WithMany("TicketMessages")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__TicketMes__Accou__489AC854");

                    b.HasOne("FlightAPI.Data.Entities.SupportTicket", "Ticket")
                        .WithMany("TicketMessages")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TicketMes__Ticke__47A6A41B");

                    b.Navigation("Account");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Account", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("Banners");

                    b.Navigation("Bookings");

                    b.Navigation("EmailVerifications");

                    b.Navigation("LoyaltyTransactions");

                    b.Navigation("Notifications");

                    b.Navigation("Otps");

                    b.Navigation("SupportTickets");

                    b.Navigation("TicketMessages");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Airline", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Airport", b =>
                {
                    b.Navigation("FlightInstanceArrivalAirportNavigations");

                    b.Navigation("FlightInstanceDepartureAirportNavigations");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Booking", b =>
                {
                    b.Navigation("BookingFlights");

                    b.Navigation("BookingServices");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Flight", b =>
                {
                    b.Navigation("FlightInstances");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.FlightInstance", b =>
                {
                    b.Navigation("BookingFlights");

                    b.Navigation("Seats");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.MembershipTier", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Promotion", b =>
                {
                    b.Navigation("Banners");

                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Seat", b =>
                {
                    b.Navigation("BookingFlights");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.SeatClass", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.Service", b =>
                {
                    b.Navigation("BookingServices");
                });

            modelBuilder.Entity("FlightAPI.Data.Entities.SupportTicket", b =>
                {
                    b.Navigation("TicketMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
